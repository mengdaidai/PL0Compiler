0  〈A程序〉→〈B分程序>.   //退出数据区   （完成）
1  〈B分程序〉→ <C常量说明部分><F变量说明部分><H过程说明部分>〈K语句〉   
2  〈B分程序〉→ <C常量说明部分><F变量说明部分>〈K语句〉    
3  〈B分程序〉→ <C常量说明部分><H过程说明部分>〈K语句〉    
4  〈B分程序〉→ <F变量说明部分><H过程说明部分>〈K语句〉    
5  〈B分程序〉→ <C常量说明部分>〈K语句〉    
6  〈B分程序〉→ <H过程说明部分>〈K语句〉    
7  〈B分程序〉→ <F变量说明部分>〈K语句〉    
8  〈B分程序〉→ 〈K语句〉    
9  <C常量说明部分> → CONST(o)<D一个或多个常量定义>；
10  <D一个或多个常量定义> → <D一个或多个常量定义>，<E常量定义>
11   <D一个或多个常量定义> → <E常量定义>             
12   <E常量定义> → <a标识符>=<b无符号整数>     //E：常量名字，数值        （完成） 
13   <F变量说明部分> → VAR(p)<G一个或多个标识符>；    //填表   G:List<变量名字>   （完成）
14  <G一个或多个标识符> → <G一个或多个标识符>，<a标识符>    //    后面的G+a赋值给前面的G  （完成）
15  <G一个或多个标识符> → <a标识符>    //   向G的链表中添加变量名字   （完成）
16  <H过程说明部分> → <I多个过程说明部分>      //层次-- 设置current_list  (完成)
17   <I多个过程说明部分> → <I多个过程说明部分><J过程首部><B分程序>；    //层次-- 退出数据区  设置current_list  (完成)
18   <I多个过程说明部分> → <J过程首部><B分程序>；     //层次--  退出数据区    设置current_list  (完成)
19   <J过程首部> → procedure(q)<a标识符>；     // 层次++ 创建表 填表 填入口地址为当前地址+1   （完成）
20   <K语句> → <L赋值语句>      
21   <K语句> →<V条件语句>    
22   <K语句> →<X当型循环语句>
23   <K语句> →<W过程调用语句>   
24   <K语句> →<Y读语句>
25   <K语句> →<Z写语句>
26   <K语句> →<M复合语句>   
27   <L赋值语句> → <a标识符>:=（g）<P表达式>    //产生目标代码 STO  （完成）
28   <M复合语句> → begin(h)<N多个语句><end>(i)   
29   <N多个语句> → <N多个语句>；<K语句>
30   <N多个语句> → <K语句>
31   <O条件> → <P表达式><U关系运算符><P表达式>  //O：falselist  U：oprtype 规约时当前Statement*传递给O的falselist  产生目标代码 OPR JPC（完成）
32   <O条件> →odd(c)<P表达式>    //0、1互反 （完成）
33   <P表达式>→+<R项>      
34    <P表达式> → +<R项><Q表达式附加>      
35   <Q表达式附加> → <Q表达式附加>+<R项>   //产生目标代码 OPR  （完成）
36   <Q表达式附加> → <Q表达式附加>-<R项>   //产生目标代码 OPR   （完成）
37   <Q表达式附加> → +<R项>   //产生目标代码 OPR   如果stack[top-3]是负号,OPR  +-替换产生目标代码，再移进0，再次产生目标代码  （完成）
38   <Q表达式附加> → -<R项>   //产生目标代码 OPR  （完成）
39   <P表达式>→-<R项>     //产生目标代码 先把零放入栈顶 OPR  （完成）
40   <P表达式> → -<R项><Q表达式附加>   
41   <P表达式> → <R项>    		    
42   <P表达式> → <R项><Q表达式附加>     
43   <R项>→ <T因子>   
44   <R项> → <T因子><S项附加>    
45   <S项附加> → <S项附加>*<T因子>   //产生目标代码 OPR   （完成）
46   <S项附加> → <S项附加>/<T因子>   //产生目标代码 OPR    （完成）
47   <S项附加> → *<T因子>   //产生目标代码 OPR   （完成）
48   <S项附加> → /<T因子>   //产生目标代码 OPR    （完成）
49  <T因子> → <a标识符>   //查表a放入栈顶    （完成）
50  <T因子> → <b无符号整数>    //整数放入栈顶   （完成）
51  <T因子> → (<P表达式>)   
52   <U关系运算符> → =|<>(d)|<|<=(e)|>|>=(f)          //传递属性   （完成）
58   <V条件语句> → if(j)<O条件>then(k)<K语句>  //规约时当前地址+1
                                              送到O的falselist所指指令 （完成）
59   <W过程调用语句> → call(n)<a标识符>     //查表生成目标代码 CAL
60   <X当型循环语句> → while(l)<O条件>do(m)<K语句>       //     while:address 移进while后将当前地址+1送给address  
                                                            规约时先添加一句跳转指令，跳转到while的address
                                                          ，当前地址+1送到O的falselist所指指令
61  <Y读语句> → read(r)(<G一个或多个标识符>)     //生成目标代码  
62  <Z写语句> → write(s)(<G一个或多个标识符>)    //生成目标代码   
